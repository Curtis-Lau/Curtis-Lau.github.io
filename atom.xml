<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Curtis LAU&#39;s BLOG</title>
  
  <subtitle>一轮皓月</subtitle>
  <link href="http://curtis-lau.github.io/atom.xml" rel="self"/>
  
  <link href="http://curtis-lau.github.io/"/>
  <updated>2021-06-28T07:39:12.667Z</updated>
  <id>http://curtis-lau.github.io/</id>
  
  <author>
    <name>Curtis Lau</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020年研究生数学建模B题</title>
    <link href="http://curtis-lau.github.io/post/aff86645/"/>
    <id>http://curtis-lau.github.io/post/aff86645/</id>
    <published>2021-06-28T07:35:27.000Z</published>
    <updated>2021-06-28T07:39:12.667Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>个人简介</title>
    <link href="http://curtis-lau.github.io/post/35221811/"/>
    <id>http://curtis-lau.github.io/post/35221811/</id>
    <published>2021-06-28T07:15:10.000Z</published>
    <updated>2021-06-28T07:49:52.139Z</updated>
    
    
    <summary type="html">&lt;p&gt;个人信息介绍，欢迎联系~&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>LinUCB Based on GA</title>
    <link href="http://curtis-lau.github.io/post/8bec61f5/"/>
    <id>http://curtis-lau.github.io/post/8bec61f5/</id>
    <published>2021-04-28T13:04:51.000Z</published>
    <updated>2021-06-27T07:14:58.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;前面几篇文章已经讲解了决策树、LinUCB以及决策树和LinUCB算法相结合的股票推荐系统。本文是将决策树替换成遗传算法，目的是为了解决LinUCB算法中的超参数以及岭回归惩罚系数对的设定问题。在LinUCB中，我们知道臂（arm）的选择公式是：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\theta_a=(D^T_aD_a+I)^{-1}D^T_aC_a&lt;/script&gt;&lt;p&gt;这里的$\theta$受到$I$的影响，而$I$是一个对角线元素在$[0,1]$之间的矩阵，具体数值根据经验而定。&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;arm_i = argmax(x^T_t\theta_t+\alpha\sqrt{x^T_t(D^TD+I)^{-1}x_t})&lt;/script&gt;&lt;p&gt;这里的$\alpha$就是一个超参数，而且$\alpha=1+\sqrt{\frac{ln{2}}{\delta}/2}$，所以$\theta≥1$。&lt;/p&gt;
&lt;p&gt;所以，基于上述两个原因，本文在LinUCB的基础上加入了遗传算法，对LinUCB参数进行优化。&lt;/p&gt;</summary>
    
    
    
    
    <category term="机器学习" scheme="http://curtis-lau.github.io/source/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="强化学习" scheme="http://curtis-lau.github.io/source/tags/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="推荐算法" scheme="http://curtis-lau.github.io/source/tags/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95/"/>
    
    <category term="遗传算法" scheme="http://curtis-lau.github.io/source/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>遗传算法</title>
    <link href="http://curtis-lau.github.io/post/34642/"/>
    <id>http://curtis-lau.github.io/post/34642/</id>
    <published>2021-02-27T02:27:06.000Z</published>
    <updated>2021-04-30T06:28:51.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;遗传算法（Genetic Algorithm, GA）是模拟达尔文生物进化论的自然选择和遗传学机理的生物进化过程的计算模型，是一种通过模拟自然进化过程搜索最优解的方法。&lt;/p&gt;
&lt;p&gt;本文结合具体例子讲解。&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://curtis-lau.github.io/source/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="机器学习" scheme="http://curtis-lau.github.io/source/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="遗传算法" scheme="http://curtis-lau.github.io/source/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="机器学习" scheme="http://curtis-lau.github.io/source/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="遗传算法" scheme="http://curtis-lau.github.io/source/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>LinUCB Based on Decision Tree</title>
    <link href="http://curtis-lau.github.io/post/40deb9b1/"/>
    <id>http://curtis-lau.github.io/post/40deb9b1/</id>
    <published>2020-08-28T15:04:31.000Z</published>
    <updated>2020-12-10T07:33:19.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本部分将前面写的LinUCB算法和决策树算法结合起来，以HS300成分股为股票池，首先定义一些因子，放入决策树将股票分组，每一组可以看成是一个portfolio，在时间$t$，将改时间所有的portfolio放入推荐系统，根据投资者的偏好、效用等特征选取投资组合推荐给投资者。&lt;/p&gt;</summary>
    
    
    
    
    <category term="机器学习" scheme="http://curtis-lau.github.io/source/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="决策树" scheme="http://curtis-lau.github.io/source/tags/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    
    <category term="强化学习" scheme="http://curtis-lau.github.io/source/tags/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="推荐算法" scheme="http://curtis-lau.github.io/source/tags/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>慧博研投爬虫</title>
    <link href="http://curtis-lau.github.io/post/55099ab/"/>
    <id>http://curtis-lau.github.io/post/55099ab/</id>
    <published>2020-07-28T07:35:52.000Z</published>
    <updated>2020-08-05T03:15:23.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文爬取的是慧博研投(www.hibor.com.cn)研报栏目的数据，主要包含研报的发布时间、标题、摘要的信息，然后将数据存于本地MongoDB数据库中。&lt;/p&gt;</summary>
    
    
    
    <category term="爬虫" scheme="http://curtis-lau.github.io/source/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="爬虫" scheme="http://curtis-lau.github.io/source/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>推荐算法：LinUCB</title>
    <link href="http://curtis-lau.github.io/post/2973/"/>
    <id>http://curtis-lau.github.io/post/2973/</id>
    <published>2020-07-27T02:27:28.000Z</published>
    <updated>2020-08-10T05:56:27.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;推荐系统里面有两个经典问题：EE 问题和冷启动问题。前者涉及到平衡准确和多样，后者涉及到产品算法运营等一系列东西。Bandit 算法是一种简单的在线学习算法，常常用于尝试解决这两个问题，本文为你介绍基础的 Bandit 算法及一系列升级版，以及对推荐系统这两个经典问题的思考。&lt;/p&gt;
&lt;p&gt;Bandit算法是一类用来实现Exploitation-Exploration机制的策略。根据是否考虑上下文特征，Bandit算法分为Context-free Bandit和Contextual Bandit两大类，本文简单介绍Context-free Bandit，重点讲解Contextual Bandit。&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://curtis-lau.github.io/source/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="强化学习" scheme="http://curtis-lau.github.io/source/categories/%E7%AE%97%E6%B3%95/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="推荐算法" scheme="http://curtis-lau.github.io/source/categories/%E7%AE%97%E6%B3%95/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="强化学习" scheme="http://curtis-lau.github.io/source/tags/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="推荐算法" scheme="http://curtis-lau.github.io/source/tags/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>决策树</title>
    <link href="http://curtis-lau.github.io/post/52060/"/>
    <id>http://curtis-lau.github.io/post/52060/</id>
    <published>2020-07-01T02:30:21.000Z</published>
    <updated>2020-07-02T08:20:11.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;决策树是一种机器学习的方法。决策树的生成算法有ID3, C4.5和C5.0等。决策树是一种树形结构，其中每个内部节点表示一个属性上的判断，每个分支代表一个判断结果的输出，最后每个叶节点代表一种分类结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文结合实际应用给出手敲的C4.5代码&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://curtis-lau.github.io/source/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="机器学习" scheme="http://curtis-lau.github.io/source/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="决策树" scheme="http://curtis-lau.github.io/source/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    
    
    <category term="机器学习" scheme="http://curtis-lau.github.io/source/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="决策树" scheme="http://curtis-lau.github.io/source/tags/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    
  </entry>
  
</feed>
